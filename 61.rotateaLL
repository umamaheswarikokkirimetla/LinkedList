# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        def nln(temp,k):
            cnt=1
            while temp:
                if cnt==k:
                    return temp
                cnt+=1
                temp=temp.next
            return temp
        tail=head
        len=1
        while tail.next!=None:
            len+=1
            tail=tail.next
        if k%len==0:
            return head
        k=k%len
        tail.next=head
        nln=nln(head,len-k)
        head=nln.next
        nln.next=None
        return head

        
